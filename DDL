--Scripts

-- Criado tabela de Tipo de Produto
-- Com ID_TP_PROD sendo number e sempre identity, não aceita null, e é criado automaticamente uma sequence que controla o autoincremento.
-- A tabela possui um Index também IX_TIPO_PRODUTO para o campo ID_TP_PROD que é Primary Key
--Todos Obejtos criados no esquema do usuário SYSTEM e tablespace SYSTEM;
CREATE TABLE "SYSTEM"."TIPO_PRODUTO" (
    "ID_TP_PROD" NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL ENABLE,
    "NM_TIPO" VARCHAR2(50) NOT NULL,
    "DT_CAD" TIMESTAMP DEFAULT SYSDATE NOT NULL ENABLE,
    CONSTRAINT "IX_TIPO_PRODUTO" PRIMARY KEY ("ID_TP_PROD")
) TABLESPACE "SYSTEM";

-- Script gerado e criado objeto sequence pelo Banco Oracle
CREATE SEQUENCE ISEQ$$_73568 INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20

-- script INDEX da tabela Produto 
CREATE UNIQUE INDEX "SYSTEM"."PRODUTO_ID_PROD_PK" ON "SYSTEM"."PRODUTO" ("ID_PROD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

-- inderindo Dados na tabela, não sendo necessário passar valor para ID_TP_PROD, que é gerado automaticamente
insert into TIPO_PRODUTO (nm_tipo) values ('ALIMENTICIO');
insert into TIPO_PRODUTO (nm_tipo) values ('LIMPEZA');
insert into TIPO_PRODUTO (nm_tipo) values ('UTENCILIOS DE COZINHA');
select * from TIPO_PRODUTO;

-- Criado tabela PRODUTO, com ID_PROD sendo sempre Identity, Not NUll e Index por esse campo.
-- DT_CAD_PROD com DEFAULT SYSDATE
CREATE TABLE "SYSTEM"."PRODUTO" (
    "ID_PROD" NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL ENABLE, 
	"NM_PROD" VARCHAR2(100 BYTE), 
	"TP_PROD" NUMBER(*,0) NOT NULL ENABLE, 
	"DT_CAD_PROD" TIMESTAMP (6) DEFAULT SYSDATE NOT NULL ENABLE, 
	 CONSTRAINT "PRODUTO_ID_PROD_PK" PRIMARY KEY ("ID_PROD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  
  -- Sequence criada pelo ORACLE ao criar e referenciar o campo ID_PROD como IDENTITY
  CREATE SEQUENCE ISEQ$$_73561 INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20
  
  -- Index Criado para a tabela PRODUTO campo ID_PROD
  CREATE UNIQUE INDEX "SYSTEM"."IX_TIPO_PRODUTO" ON "SYSTEM"."TIPO_PRODUTO" ("ID_TP_PROD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

--Alterando o campo NM_PROD da tabela PRODUTO para não aceitar valores null
ALTER TABLE PRODUTO MODIFY (NM_PROD NOT NULL);

-- Adicionando um FK na tabela PRODUTO referenciando ao campo ID_TP_PROD da tabela TIPO_PRODUTO
ALTER TABLE PRODUTO ADD CONSTRAINT FK_PRODUTO_TP_PROD FOREIGN KEY (TP_PROD)
REFERENCES TIPO_PRODUTO (ID_TP_PROD) ENABLE;

-- Posso criar uma tabela com GENERATED BY DEFAULT AS IDENTITY
-- É gerada e controlado automaticamente via a sequence o id do campo
-- E por ser BY DEFAULT, a tabela aceita inserir manualmente um valor para a chave também
-- Não aceita NULL para o campo
CREATE TABLE TABELA_EXEMPLO (
  id          NUMBER GENERATED BY DEFAULT AS IDENTITY,
  descricao   VARCHAR2(30)
);

--Exemplos de Insert
insert into TABELA_EXEMPLO (descricao) values ('Cadastro 01'); -- Registro inserido com ID 1
insert into TABELA_EXEMPLO (id, descricao) values (2, 'Cadastro 02'); -- Registro inserido  com ID 2 que foi passado manualmente

-- Posso criar uma tabela com NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY
-- É gerada e controlado automaticamente via a sequence o id do campo
-- Aceita inserir um registro e ser informado um vaor para a chave de itendificação
-- Aceita inserir um registro não passando a chave
CREATE TABLE TABELA_EXEMPLO2 (
  id          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  descricao   VARCHAR2(30)
);

--Exemplos de Insert
insert into TABELA_EXEMPLO2 (descricao) values ('Cadastro 01'); -- Registro inserido com ID 1
insert into TABELA_EXEMPLO2 (id, descricao) values (2, 'Cadastro 01'); -- Registro inserido com ID 2, que foi passado manualmente
insert into TABELA_EXEMPLO2 (id, descricao) values (NULL, 'Cadastro 03'); -- Registro inserido com ID 3, mesmo informaado null, foi gerado o ID da proxima sequencia.

--Criado uma Procedure todos parâmetros IN por default quando não é especificado
   CREATE OR REPLACE PROCEDURE proc_add_produto (p_nm_prod VARCHAR2, p_tp_prod NUMBER) AS
   BEGIN
        INSERT INTO PRODUTO (nm_prod, tp_prod) VALUES (p_nm_prod, p_tp_prod);
   END;
   
   --Executado procedure e consultado a tabela
   EXECUTE proc_add_produto('MILHO DE PIPOCA', 1);
   SELECT * FROM PRODUTO;
   
   -- Procedure para Atualizar Descrição nome Produto
   CREATE OR REPLACE PROCEDURE proc_update_produto (p_id_prod NUMBER, p_nm_prod VARCHAR2) AS
   BEGIN
        UPDATE PRODUTO SET nm_prod = p_nm_prod
        WHERE
        id_prod = p_id_prod;
   END;
   
   -- Executando Procedure de Atualização
   EXECUTE proc_update_produto (25, 'MILHO PIPOCA');
   SELECT * FROM PRODUTO;
   
   -- Procedure para Excluir Cadastro de Produto
  CREATE OR REPLACE PROCEDURE proc_delete_produto (p_id_prod NUMBER) AS
   BEGIN
        DELETE FROM PRODUTO WHERE id_prod = p_id_prod;
   END;
   
   --Executando Procedure
   EXECUTE proc_delete_produto (25);
   SELECT * FROM PRODUTO; 
